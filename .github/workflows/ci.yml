name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Fast, portable path using ONNXRuntime. Runs on all OSes.
  onnx-tests:
    name: ONNX • ${{ matrix.os }} • py${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"

      - name: Install deps (onnx path + dev)
        run: |
          python -m pip install --upgrade pip
          pip install ".[onnx,dev]"
          pip install types-PyYAML  # optional typing aid

      - name: Lint (ruff)
        run: |
          ruff --version
          ruff check src tests

      - name: Type-check (mypy)
        run: |
          mypy --version
          mypy src/vert

      - name: Run pytest (skip integration & torch-only)
        env:
          PYTHONWARNINGS: default
        run: |
          pytest -m "not integration and not torch_required" -q

  # Torch CPU wheels on Ubuntu; runs torch-specific tests.
  torch-tests:
    name: Torch CPU • Ubuntu • py${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"

      - name: Install Torch CPU + dev
        run: |
          python -m pip install --upgrade pip
          pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
          pip install ".[dev]"

      - name: Run torch-only tests (skip integration)
        env:
          PYTHONWARNINGS: default
        run: |
          pytest -m "torch_required and not integration" -q
